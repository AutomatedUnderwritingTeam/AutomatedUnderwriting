package com.fbfs.automatedunderwriting;

import com.fbfs.pc.au.model.workitem.WorkItemReason;
import com.fbfs.pc.ecd.model.Coverage;
import com.fbfs.pc.ecd.model.Vehicle;
import com.fbfs.pc.ecd.model.Policy;
import com.fbfs.pc.ecd.model.Term;

rule "BR__UM UDM Stacked Coverage and AOI more than $1M (NM)__CSR(New Business)~8238~"
	agenda-group "BR_NewBusiness"
	dialect "mvel"
	when
		>vehicle : Vehicle( unitAtRiskNumber : unitAtRiskNumber)
		>Coverage( coverageCode == "UDCSL"  || == "UMCSL"  || == "UIBI"  || == "UDRBI" , coverageNumber : coverageNumber, vehicleSupplement != null , vehicleSupplement.stackable != null , vehicleSupplement.stackable == true )
		>Policy( state == "NM" )
		>Term( effectiveDate < "30-Sep-2019" )
		>(Coverage( coverageNumber == coverageNumber ) from vehicle.coverageList)
		R8238 - UM Stacked coverages greater than 10000000
	then
		>WorkItemReason fact0 = new WorkItemReason();
		>fact0.setType( "Policy" );
		>fact0.setQueue( "CSR" );
		>fact0.setReason( "8238: Stacked Coverage and um/udm coverage AOI more than $10M." );
		>fact0.setAddAction( "Check For UM/UDM Stacking Rejection/selection Form" );
		>fact0.setAddLink( "Vehicle link" );
		>fact0.setAddBookmark( "VE" );
		>fact0.setAddBookmarkUnit( unitAtRiskNumber );
		>fact0.setMgmtReportingCategory( "UAR" );
		>fact0.setMgmtReportingUnitAtRisk( unitAtRiskNumber );
		>insertLogical( fact0 );
end
