package com.fbfs.automatedunderwriting;

import com.fbfs.pc.au.model.workitem.WorkItemReason;
import com.fbfs.pc.ecd.model.Driver;
import com.fbfs.pc.ecd.model.Term;
import com.fbfs.pc.au.model.count.CntDriver;
import com.fbfs.pc.ecd.model.Policy;
import com.fbfs.pc.ecd.model.PriorLoss;
import com.fbfs.pc.ecd.model.PriorLossSupplement;
import com.fbfs.pc.ecd.model.Vehicle;
import java.util.Date;
import com.fbfs.pc.ecd.model.AccidentConviction;

rule "BR__Youthful Operator With A Conviction On The Policy__UND(New Business)~8375~"
	agenda-group "BR_NewBusiness"
	dialect "mvel"
	when
		>$Term : Term( termEffectiveDate : effectiveDate)
		>Policy( $state : state)
		>( Term( effectiveDate >= "30-Sep-2016" , eval( $state == "KS" || $state == "MN" || $state == "NM"  || $state == "UT" )) or Term( effectiveDate >= "23-Jun-2017" , eval( $state == "AZ" || $state == "IA" || $state == "NE"  || $state == "SD" )) )
		>Vehicle( vehUnitAtRiskNumber : unitAtRiskNumber)
		>Driver( drvUnitAtRiskNumber : unitAtRiskNumber, licenseList : licenseList, driverReference : driverReference, age < 25 )
		>priorLoss : PriorLoss( priorLossSupplement : supplement != null , dateOfLoss : dateOfLoss != null , eval( calculateMonths(dateOfLoss, termEffectiveDate) <= 36 ))
		>(PriorLossSupplement( unitAtRiskNumber == drvUnitAtRiskNumber , groupType == "1" ) from priorLossSupplement)
		R5949: The driver has a conviction or another prior loss within 36 months
	then
		>WorkItemReason fact0 = new WorkItemReason();
		>fact0.setType( "Policy" );
		>fact0.setQueue( "Undw" );
		>fact0.setReason( "8375: Youthful operator (under 25) with a Group 1 loss on the policy." );
		>fact0.setAddAction( "Review Driver Assignment" );
		>fact0.setAddAction( "Review Underwriting Reports" );
		>fact0.setAddLink( "Insured link" );
		>fact0.setAddBookmark( "Insured" );
		>fact0.setAddBookmarkUnit( driverReference );
		>fact0.setMgmtReportingCategory( "UAR" );
		>fact0.setMgmtReportingUnitAtRisk( drvUnitAtRiskNumber );
		>insert( fact0 );
end
