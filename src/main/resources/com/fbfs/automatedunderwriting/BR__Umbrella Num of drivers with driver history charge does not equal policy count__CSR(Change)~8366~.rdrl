package com.fbfs.automatedunderwriting;

import com.fbfs.pc.au.model.workitem.WorkItemReason;
import com.fbfs.pc.ecd.model.Driver;
import com.fbfs.pc.ecd.model.UmbrellaCoverage;
import com.fbfs.pc.ecd.model.UmbrellaVehiclePremium;
import java.lang.Number;

rule "BR__Umbrella Num of drivers with driver history charge does not equal policy count__CSR(Change)~8366~"
	agenda-group "BR_Change"
	dialect "mvel"
	when
		Driver( hasHistoryCharge == true , driverReference : driverReference)
		cntDriverWithHistoryCharge : Number( ) from accumulate ( Driver( hhc : hasHistoryCharge == true ),
			count(hhc)) 
		umbrellaCoverage : UmbrellaCoverage( coverageNumber : coverageNumber)
		(UmbrellaVehiclePremium( numberOfDriversWithHistoryCharge < cntDriverWithHistoryCharge.intValue() ) from umbrellaCoverage.vehiclePremium)
	then
		WorkItemReason fact0 = new WorkItemReason();
		fact0.setType( "Policy" );
		fact0.setQueue( "CSR" );
		fact0.setReason( "8366: Umbrella number of drivers with driver history charge does not equal policy count" );
		fact0.setAddAction( "FB Memo" );
		fact0.setAddAction( "Review Umbrella Coverage" );
		fact0.setAddLink( "Insured link" );
		fact0.setAddBookmark( "Insured" );
		fact0.setAddBookmarkUnit( driverReference );
		fact0.setAddLink( "Umbrella link" );
		fact0.setAddBookmark( "Umbrella" );
		fact0.setAddBookmarkUnit( "None" );
		fact0.setMgmtReportingCategory( "COV" );
		fact0.setMgmtReportingUnitAtRisk( coverageNumber );
		insert( fact0 );
end
