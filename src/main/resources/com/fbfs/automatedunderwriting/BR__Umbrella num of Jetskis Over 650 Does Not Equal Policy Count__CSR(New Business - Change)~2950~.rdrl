package com.fbfs.automatedunderwriting;

import com.fbfs.pc.au.model.workitem.WorkItemReason;
import com.fbfs.pc.ecd.model.UmbrellaCoverage;
import com.fbfs.pc.ecd.model.Vehicle;
import com.fbfs.pc.au.model.count.CntPolicy;

rule "BR__Umbrella num of Jetskis Over 650 Does Not Equal Policy Count__CSR(New Business - Change)~2950~"
	agenda-group "BR_NewBusiness_Change"
	dialect "mvel"
	when
		UmbrellaCoverage( deleted != true , coverageNumber : coverageNumber, umbNumJetskis : vehiclePremium.numberOfOver650CcJetskis)
		CntPolicy( policyNumJetskis : cntJetskisOver650)
		eval( umbNumJetskis != policyNumJetskis )
		( Vehicle( type == "WJ" , engCap : engineCapacity >= 651 , previousEngineCapacity != null , prevEngCap : previousEngineCapacity < 651 , eval( engCap != prevEngCap )) or Vehicle( type == "WJ" , engCap2 : engineCapacity < 651 , previousEngineCapacity != null , prevEngCap2 : previousEngineCapacity >= 651 , eval( engCap2 != prevEngCap2 )) or Vehicle( type == "WJ" , added == true , engineCapacity <= 651 ) or Vehicle( type == "WJ" , deleted == true , engineCapacity >= 651 ) or UmbrellaCoverage( added == true ) or UmbrellaCoverage( umbNumJetskis2 : vehiclePremium.numberOfOver650CcJetskis, prevUmbNumJetskis2 : vehiclePremium.previousNumberOfOver650CcJetskis != null , eval( prevUmbNumJetskis2 != umbNumJetskis2 )) )
	then
		WorkItemReason fact0 = new WorkItemReason();
		fact0.setType( "Policy" );
		fact0.setQueue( "CSR" );
		fact0.setReason( "2950: Number of jetskis over 650 ccs on the policy does not match the umbrella." );
		fact0.setAddAction( "FB Memo" );
		fact0.setAddAction( "Review Jetskis over 650 ccs" );
		fact0.setAddLink( "Umbrella link" );
		fact0.setAddBookmark( "Umbrella" );
		fact0.setAddBookmarkUnit( "None" );
		fact0.setAddLink( "Vehicle folder link" );
		fact0.setAddBookmark( "VehicleFolder" );
		fact0.setAddBookmarkUnit( "None" );
		fact0.setMgmtReportingCategory( "COV" );
		fact0.setMgmtReportingUnitAtRisk( coverageNumber );
		insertLogical( fact0 );
end
