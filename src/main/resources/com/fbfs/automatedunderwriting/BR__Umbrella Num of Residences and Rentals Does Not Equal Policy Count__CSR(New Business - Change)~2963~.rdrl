package com.fbfs.automatedunderwriting;
import com.fbfs.pc.au.model.workitem.WorkItemReason;
import com.fbfs.pc.ecd.model.UmbrellaCoverage;
import com.fbfs.pc.ecd.model.Dwelling;
import com.fbfs.pc.au.model.count.CntPolicy;


rule "BR__Umbrella Num of Residences and Rentals Does Not Equal Policy Count__CSR(New Business - Change)~2963~"
	agenda-group "BR_NewBusiness_Change"
	dialect "mvel"
	when
		UmbrellaCoverage( deleted != true , coverageNumber : coverageNumber, umbNumRes : propertyPremium.numberOfResidences)
		CntPolicy( policyNumRes : cntResidence)
		eval (umbNumRes != policyNumRes)
		( UmbrellaCoverage( added == true ) or UmbrellaCoverage( numRes : propertyPremium.numberOfResidences, prevNumRes : propertyPremium.previousNumberOfResidences != null  , eval( numRes != prevNumRes )) or Dwelling( added == true ) or Dwelling( deleted == true ) )
	then
		WorkItemReason fact0 = new WorkItemReason();
		fact0.setType( "Policy" );
		fact0.setQueue( "CSR" );
		fact0.setReason( "2963: Number of residences/rentals on the policy does not match the umbrella." );
		fact0.setAddAction( "FB Memo" );
		fact0.setAddAction( "Review Property" );
		fact0.setAddAction( "Review for Business Liability" );
		fact0.setAddLink( "Umbrella link" );
		fact0.setAddBookmark( "Umbrella" );
		fact0.setAddBookmarkUnit( "None" );
		fact0.setAddLink( "Property/Liability link" );
		fact0.setAddBookmark( "PropertyLiability" );
		fact0.setAddBookmarkUnit( "None" );
		fact0.setMgmtReportingCategory( "COV" );
		fact0.setMgmtReportingUnitAtRisk( coverageNumber );
		insertLogical( fact0 );
end
