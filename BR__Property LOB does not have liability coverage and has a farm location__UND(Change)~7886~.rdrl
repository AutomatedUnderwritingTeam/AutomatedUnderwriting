package com.fbfs.automatedunderwriting;

import com.fbfs.pc.au.model.workitem.WorkItemReason;
import com.fbfs.pc.ecd.model.Coverage;
import com.fbfs.pc.ecd.model.PropertyLineOfBusiness;
import com.fbfs.pc.ecd.model.Liability;
import com.fbfs.pc.ecd.model.UnitAtRisk;
import com.fbfs.pc.ecd.model.Location;
import com.fbfs.pc.ecd.model.LocationSupplement;

rule "BR__Property LOB does not have liability coverage and has a farm location__UND(Change)~7886~"
	agenda-group "BR_Change"
	dialect "mvel"
	when
		plob : PropertyLineOfBusiness( deleted != true )
		not (Coverage( coverageCode == "BIPDF"  || == "BIPDP" , deleted != true )) 
		( Liability( deleted == true ) or UnitAtRisk( added == true , lineOfBusiness == "PRPL" ) or PropertyLineOfBusiness( added == true ) )
		$location : Location( deleted != true) 
		LocationSupplement( locationUse == "S" || locationUse == "F"  ) from $location.supplement 
	then
		WorkItemReason fact0 = new WorkItemReason();
		fact0.setType( "Policy" );
		fact0.setQueue( "Undw" );
		fact0.setReason( "7886: Prop LOB without liab coverage and has farm location." );
		fact0.setAddAction( "FB Memo" );
		fact0.setAddLink( "Property/Liability Information link" );
		fact0.setAddBookmark( "PropertyLiability" );
		fact0.setAddBookmarkUnit( "none" );
		fact0.setMgmtReportingCategory( "PLOB" );
		fact0.setMgmtReportingUnitAtRisk( "PLOB" );
		insertLogical( fact0 );
end
